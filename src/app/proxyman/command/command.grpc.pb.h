// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: app/proxyman/command/command.proto
#ifndef GRPC_app_2fproxyman_2fcommand_2fcommand_2eproto__INCLUDED
#define GRPC_app_2fproxyman_2fcommand_2fcommand_2eproto__INCLUDED

#include "src/app/proxyman/command/command.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace v2ray {
namespace core {
namespace app {
namespace proxyman {
namespace command {

class HandlerService final {
 public:
  static constexpr char const* service_full_name() {
    return "v2ray.core.app.proxyman.command.HandlerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>> AsyncAddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>>(AsyncAddInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>> PrepareAsyncAddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>>(PrepareAsyncAddInboundRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>> AsyncRemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>>(AsyncRemoveInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>> PrepareAsyncRemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>>(PrepareAsyncRemoveInboundRaw(context, request, cq));
    }
    virtual ::grpc::Status AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>> AsyncAlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>>(AsyncAlterInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>> PrepareAsyncAlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>>(PrepareAsyncAlterInboundRaw(context, request, cq));
    }
    virtual ::grpc::Status AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>> AsyncAddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>>(AsyncAddOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>> PrepareAsyncAddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>>(PrepareAsyncAddOutboundRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>> AsyncRemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>>(AsyncRemoveOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>> PrepareAsyncRemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>>(PrepareAsyncRemoveOutboundRaw(context, request, cq));
    }
    virtual ::grpc::Status AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>> AsyncAlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>>(AsyncAlterOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>> PrepareAsyncAlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>>(PrepareAsyncAlterOutboundRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>* AsyncAddInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddInboundResponse>* PrepareAsyncAddInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* AsyncRemoveInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* PrepareAsyncRemoveInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>* AsyncAlterInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterInboundResponse>* PrepareAsyncAlterInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>* AsyncAddOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AddOutboundResponse>* PrepareAsyncAddOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* AsyncRemoveOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* PrepareAsyncRemoveOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* AsyncAlterOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* PrepareAsyncAlterOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>> AsyncAddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>>(AsyncAddInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>> PrepareAsyncAddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>>(PrepareAsyncAddInboundRaw(context, request, cq));
    }
    ::grpc::Status RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>> AsyncRemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>>(AsyncRemoveInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>> PrepareAsyncRemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>>(PrepareAsyncRemoveInboundRaw(context, request, cq));
    }
    ::grpc::Status AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>> AsyncAlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>>(AsyncAlterInboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>> PrepareAsyncAlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>>(PrepareAsyncAlterInboundRaw(context, request, cq));
    }
    ::grpc::Status AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>> AsyncAddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>>(AsyncAddOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>> PrepareAsyncAddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>>(PrepareAsyncAddOutboundRaw(context, request, cq));
    }
    ::grpc::Status RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>> AsyncRemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>>(AsyncRemoveOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>> PrepareAsyncRemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>>(PrepareAsyncRemoveOutboundRaw(context, request, cq));
    }
    ::grpc::Status AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>> AsyncAlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>>(AsyncAlterOutboundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>> PrepareAsyncAlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>>(PrepareAsyncAlterOutboundRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AddInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RemoveInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AlterInbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AddOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RemoveOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AlterOutbound(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>* AsyncAddInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddInboundResponse>* PrepareAsyncAddInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* AsyncRemoveInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* PrepareAsyncRemoveInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>* AsyncAlterInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterInboundResponse>* PrepareAsyncAlterInboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>* AsyncAddOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AddOutboundResponse>* PrepareAsyncAddOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* AsyncRemoveOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* PrepareAsyncRemoveOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* AsyncAlterOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* PrepareAsyncAlterOutboundRaw(::grpc::ClientContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddInbound_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveInbound_;
    const ::grpc::internal::RpcMethod rpcmethod_AlterInbound_;
    const ::grpc::internal::RpcMethod rpcmethod_AddOutbound_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveOutbound_;
    const ::grpc::internal::RpcMethod rpcmethod_AlterOutbound_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddInbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response);
    virtual ::grpc::Status RemoveInbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response);
    virtual ::grpc::Status AlterInbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response);
    virtual ::grpc::Status AddOutbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response);
    virtual ::grpc::Status RemoveOutbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response);
    virtual ::grpc::Status AlterOutbound(::grpc::ServerContext* context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddInbound() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddInbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::AddInboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveInbound() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveInbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AlterInbound() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterInbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::AlterInboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddOutbound() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddOutbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::AddOutboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveOutbound() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveOutbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AlterOutbound() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterOutbound(::grpc::ServerContext* context, ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::grpc::ServerAsyncResponseWriter< ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddInbound<WithAsyncMethod_RemoveInbound<WithAsyncMethod_AlterInbound<WithAsyncMethod_AddOutbound<WithAsyncMethod_RemoveOutbound<WithAsyncMethod_AlterOutbound<Service > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AddInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AddInboundRequest, ::v2ray::core::app::proxyman::command::AddInboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::AddInboundRequest* request, ::v2ray::core::app::proxyman::command::AddInboundResponse* response) { return this->AddInbound(context, request, response); }));}
    void SetMessageAllocatorFor_AddInbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::AddInboundRequest, ::v2ray::core::app::proxyman::command::AddInboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AddInboundRequest, ::v2ray::core::app::proxyman::command::AddInboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RemoveInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::RemoveInboundRequest, ::v2ray::core::app::proxyman::command::RemoveInboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* response) { return this->RemoveInbound(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveInbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::RemoveInboundRequest, ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::RemoveInboundRequest, ::v2ray::core::app::proxyman::command::RemoveInboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RemoveInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RemoveInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AlterInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AlterInboundRequest, ::v2ray::core::app::proxyman::command::AlterInboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* request, ::v2ray::core::app::proxyman::command::AlterInboundResponse* response) { return this->AlterInbound(context, request, response); }));}
    void SetMessageAllocatorFor_AlterInbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::AlterInboundRequest, ::v2ray::core::app::proxyman::command::AlterInboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AlterInboundRequest, ::v2ray::core::app::proxyman::command::AlterInboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AlterInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AlterInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AddOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AddOutboundRequest, ::v2ray::core::app::proxyman::command::AddOutboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* request, ::v2ray::core::app::proxyman::command::AddOutboundResponse* response) { return this->AddOutbound(context, request, response); }));}
    void SetMessageAllocatorFor_AddOutbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::AddOutboundRequest, ::v2ray::core::app::proxyman::command::AddOutboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AddOutboundRequest, ::v2ray::core::app::proxyman::command::AddOutboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RemoveOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::RemoveOutboundRequest, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* request, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* response) { return this->RemoveOutbound(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveOutbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::RemoveOutboundRequest, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::RemoveOutboundRequest, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RemoveOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RemoveOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AlterOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AlterOutboundRequest, ::v2ray::core::app::proxyman::command::AlterOutboundResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* request, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* response) { return this->AlterOutbound(context, request, response); }));}
    void SetMessageAllocatorFor_AlterOutbound(
        ::grpc::experimental::MessageAllocator< ::v2ray::core::app::proxyman::command::AlterOutboundRequest, ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v2ray::core::app::proxyman::command::AlterOutboundRequest, ::v2ray::core::app::proxyman::command::AlterOutboundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AlterOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AlterOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_AddInbound<ExperimentalWithCallbackMethod_RemoveInbound<ExperimentalWithCallbackMethod_AlterInbound<ExperimentalWithCallbackMethod_AddOutbound<ExperimentalWithCallbackMethod_RemoveOutbound<ExperimentalWithCallbackMethod_AlterOutbound<Service > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_AddInbound<ExperimentalWithCallbackMethod_RemoveInbound<ExperimentalWithCallbackMethod_AlterInbound<ExperimentalWithCallbackMethod_AddOutbound<ExperimentalWithCallbackMethod_RemoveOutbound<ExperimentalWithCallbackMethod_AlterOutbound<Service > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddInbound() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveInbound() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AlterInbound() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddOutbound() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveOutbound() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AlterOutbound() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddInbound() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddInbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveInbound() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveInbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AlterInbound() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterInbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddOutbound() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddOutbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveOutbound() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveOutbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AlterOutbound() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAlterOutbound(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AddInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddInbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RemoveInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveInbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RemoveInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RemoveInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AlterInbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AlterInbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AlterInbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AlterInbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AddOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddOutbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AddOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AddOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RemoveOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveOutbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RemoveOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RemoveOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AlterOutbound() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AlterOutbound(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AlterOutbound(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AlterOutbound(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddInbound() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::AddInboundRequest, ::v2ray::core::app::proxyman::command::AddInboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::AddInboundRequest, ::v2ray::core::app::proxyman::command::AddInboundResponse>* streamer) {
                       return this->StreamedAddInbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddInbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::AddInboundRequest,::v2ray::core::app::proxyman::command::AddInboundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveInbound() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::RemoveInboundRequest, ::v2ray::core::app::proxyman::command::RemoveInboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::RemoveInboundRequest, ::v2ray::core::app::proxyman::command::RemoveInboundResponse>* streamer) {
                       return this->StreamedRemoveInbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveInbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::RemoveInboundRequest,::v2ray::core::app::proxyman::command::RemoveInboundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AlterInbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AlterInbound() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::AlterInboundRequest, ::v2ray::core::app::proxyman::command::AlterInboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::AlterInboundRequest, ::v2ray::core::app::proxyman::command::AlterInboundResponse>* streamer) {
                       return this->StreamedAlterInbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AlterInbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AlterInbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterInboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterInboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAlterInbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::AlterInboundRequest,::v2ray::core::app::proxyman::command::AlterInboundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddOutbound() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::AddOutboundRequest, ::v2ray::core::app::proxyman::command::AddOutboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::AddOutboundRequest, ::v2ray::core::app::proxyman::command::AddOutboundResponse>* streamer) {
                       return this->StreamedAddOutbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AddOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AddOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddOutbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::AddOutboundRequest,::v2ray::core::app::proxyman::command::AddOutboundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveOutbound() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::RemoveOutboundRequest, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::RemoveOutboundRequest, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* streamer) {
                       return this->StreamedRemoveOutbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::RemoveOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::RemoveOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveOutbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::RemoveOutboundRequest,::v2ray::core::app::proxyman::command::RemoveOutboundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AlterOutbound : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AlterOutbound() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v2ray::core::app::proxyman::command::AlterOutboundRequest, ::v2ray::core::app::proxyman::command::AlterOutboundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v2ray::core::app::proxyman::command::AlterOutboundRequest, ::v2ray::core::app::proxyman::command::AlterOutboundResponse>* streamer) {
                       return this->StreamedAlterOutbound(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AlterOutbound() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AlterOutbound(::grpc::ServerContext* /*context*/, const ::v2ray::core::app::proxyman::command::AlterOutboundRequest* /*request*/, ::v2ray::core::app::proxyman::command::AlterOutboundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAlterOutbound(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v2ray::core::app::proxyman::command::AlterOutboundRequest,::v2ray::core::app::proxyman::command::AlterOutboundResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddInbound<WithStreamedUnaryMethod_RemoveInbound<WithStreamedUnaryMethod_AlterInbound<WithStreamedUnaryMethod_AddOutbound<WithStreamedUnaryMethod_RemoveOutbound<WithStreamedUnaryMethod_AlterOutbound<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddInbound<WithStreamedUnaryMethod_RemoveInbound<WithStreamedUnaryMethod_AlterInbound<WithStreamedUnaryMethod_AddOutbound<WithStreamedUnaryMethod_RemoveOutbound<WithStreamedUnaryMethod_AlterOutbound<Service > > > > > > StreamedService;
};

}  // namespace command
}  // namespace proxyman
}  // namespace app
}  // namespace core
}  // namespace v2ray


#endif  // GRPC_app_2fproxyman_2fcommand_2fcommand_2eproto__INCLUDED
