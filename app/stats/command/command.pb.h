// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/stats/command/command.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_app_2fstats_2fcommand_2fcommand_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_app_2fstats_2fcommand_2fcommand_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(int index);
namespace v2ray {
namespace core {
namespace app {
namespace stats {
namespace command {
class Config;
struct ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class GetStatsRequest;
struct GetStatsRequestDefaultTypeInternal;
extern GetStatsRequestDefaultTypeInternal _GetStatsRequest_default_instance_;
class GetStatsResponse;
struct GetStatsResponseDefaultTypeInternal;
extern GetStatsResponseDefaultTypeInternal _GetStatsResponse_default_instance_;
class QueryStatsRequest;
struct QueryStatsRequestDefaultTypeInternal;
extern QueryStatsRequestDefaultTypeInternal _QueryStatsRequest_default_instance_;
class QueryStatsResponse;
struct QueryStatsResponseDefaultTypeInternal;
extern QueryStatsResponseDefaultTypeInternal _QueryStatsResponse_default_instance_;
class Stat;
struct StatDefaultTypeInternal;
extern StatDefaultTypeInternal _Stat_default_instance_;
class SysStatsRequest;
struct SysStatsRequestDefaultTypeInternal;
extern SysStatsRequestDefaultTypeInternal _SysStatsRequest_default_instance_;
class SysStatsResponse;
struct SysStatsResponseDefaultTypeInternal;
extern SysStatsResponseDefaultTypeInternal _SysStatsResponse_default_instance_;
}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace core
}  // namespace v2ray
PROTOBUF_NAMESPACE_OPEN
template<> ::v2ray::core::app::stats::command::Config* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::Config>(Arena*);
template<> ::v2ray::core::app::stats::command::GetStatsRequest* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::GetStatsRequest>(Arena*);
template<> ::v2ray::core::app::stats::command::GetStatsResponse* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::GetStatsResponse>(Arena*);
template<> ::v2ray::core::app::stats::command::QueryStatsRequest* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::QueryStatsRequest>(Arena*);
template<> ::v2ray::core::app::stats::command::QueryStatsResponse* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::QueryStatsResponse>(Arena*);
template<> ::v2ray::core::app::stats::command::Stat* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::Stat>(Arena*);
template<> ::v2ray::core::app::stats::command::SysStatsRequest* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::SysStatsRequest>(Arena*);
template<> ::v2ray::core::app::stats::command::SysStatsResponse* Arena::CreateMaybeMessage<::v2ray::core::app::stats::command::SysStatsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace v2ray {
namespace core {
namespace app {
namespace stats {
namespace command {

// ===================================================================

class GetStatsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.GetStatsRequest) */ {
 public:
  inline GetStatsRequest() : GetStatsRequest(nullptr) {}
  virtual ~GetStatsRequest();
  explicit constexpr GetStatsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatsRequest(const GetStatsRequest& from);
  GetStatsRequest(GetStatsRequest&& from) noexcept
    : GetStatsRequest() {
    *this = ::std::move(from);
  }

  inline GetStatsRequest& operator=(const GetStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsRequest& operator=(GetStatsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatsRequest*>(
               &_GetStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetStatsRequest& a, GetStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatsRequest* New() const final {
    return CreateMaybeMessage<GetStatsRequest>(nullptr);
  }

  GetStatsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatsRequest& from);
  void MergeFrom(const GetStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.GetStatsRequest";
  }
  protected:
  explicit GetStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kResetFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bool reset = 2;
  void clear_reset();
  bool reset() const;
  void set_reset(bool value);
  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.GetStatsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool reset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class Stat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.Stat) */ {
 public:
  inline Stat() : Stat(nullptr) {}
  virtual ~Stat();
  explicit constexpr Stat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Stat(const Stat& from);
  Stat(Stat&& from) noexcept
    : Stat() {
    *this = ::std::move(from);
  }

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stat& operator=(Stat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Stat* internal_default_instance() {
    return reinterpret_cast<const Stat*>(
               &_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Stat& a, Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(Stat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Stat* New() const final {
    return CreateMaybeMessage<Stat>(nullptr);
  }

  Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Stat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Stat& from);
  void MergeFrom(const Stat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.Stat";
  }
  protected:
  explicit Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int64 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.Stat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class GetStatsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.GetStatsResponse) */ {
 public:
  inline GetStatsResponse() : GetStatsResponse(nullptr) {}
  virtual ~GetStatsResponse();
  explicit constexpr GetStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatsResponse(const GetStatsResponse& from);
  GetStatsResponse(GetStatsResponse&& from) noexcept
    : GetStatsResponse() {
    *this = ::std::move(from);
  }

  inline GetStatsResponse& operator=(const GetStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsResponse& operator=(GetStatsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatsResponse*>(
               &_GetStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetStatsResponse& a, GetStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatsResponse* New() const final {
    return CreateMaybeMessage<GetStatsResponse>(nullptr);
  }

  GetStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatsResponse& from);
  void MergeFrom(const GetStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.GetStatsResponse";
  }
  protected:
  explicit GetStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatFieldNumber = 1,
  };
  // .v2ray.core.app.stats.command.Stat stat = 1;
  bool has_stat() const;
  private:
  bool _internal_has_stat() const;
  public:
  void clear_stat();
  const ::v2ray::core::app::stats::command::Stat& stat() const;
  ::v2ray::core::app::stats::command::Stat* release_stat();
  ::v2ray::core::app::stats::command::Stat* mutable_stat();
  void set_allocated_stat(::v2ray::core::app::stats::command::Stat* stat);
  private:
  const ::v2ray::core::app::stats::command::Stat& _internal_stat() const;
  ::v2ray::core::app::stats::command::Stat* _internal_mutable_stat();
  public:
  void unsafe_arena_set_allocated_stat(
      ::v2ray::core::app::stats::command::Stat* stat);
  ::v2ray::core::app::stats::command::Stat* unsafe_arena_release_stat();

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.GetStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::v2ray::core::app::stats::command::Stat* stat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class QueryStatsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.QueryStatsRequest) */ {
 public:
  inline QueryStatsRequest() : QueryStatsRequest(nullptr) {}
  virtual ~QueryStatsRequest();
  explicit constexpr QueryStatsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryStatsRequest(const QueryStatsRequest& from);
  QueryStatsRequest(QueryStatsRequest&& from) noexcept
    : QueryStatsRequest() {
    *this = ::std::move(from);
  }

  inline QueryStatsRequest& operator=(const QueryStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStatsRequest& operator=(QueryStatsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStatsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryStatsRequest*>(
               &_QueryStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryStatsRequest& a, QueryStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStatsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStatsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryStatsRequest* New() const final {
    return CreateMaybeMessage<QueryStatsRequest>(nullptr);
  }

  QueryStatsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryStatsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryStatsRequest& from);
  void MergeFrom(const QueryStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStatsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.QueryStatsRequest";
  }
  protected:
  explicit QueryStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatternFieldNumber = 1,
    kResetFieldNumber = 2,
  };
  // string pattern = 1;
  void clear_pattern();
  const std::string& pattern() const;
  void set_pattern(const std::string& value);
  void set_pattern(std::string&& value);
  void set_pattern(const char* value);
  void set_pattern(const char* value, size_t size);
  std::string* mutable_pattern();
  std::string* release_pattern();
  void set_allocated_pattern(std::string* pattern);
  private:
  const std::string& _internal_pattern() const;
  void _internal_set_pattern(const std::string& value);
  std::string* _internal_mutable_pattern();
  public:

  // bool reset = 2;
  void clear_reset();
  bool reset() const;
  void set_reset(bool value);
  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.QueryStatsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pattern_;
  bool reset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class QueryStatsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.QueryStatsResponse) */ {
 public:
  inline QueryStatsResponse() : QueryStatsResponse(nullptr) {}
  virtual ~QueryStatsResponse();
  explicit constexpr QueryStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryStatsResponse(const QueryStatsResponse& from);
  QueryStatsResponse(QueryStatsResponse&& from) noexcept
    : QueryStatsResponse() {
    *this = ::std::move(from);
  }

  inline QueryStatsResponse& operator=(const QueryStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStatsResponse& operator=(QueryStatsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStatsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryStatsResponse*>(
               &_QueryStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryStatsResponse& a, QueryStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStatsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryStatsResponse* New() const final {
    return CreateMaybeMessage<QueryStatsResponse>(nullptr);
  }

  QueryStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryStatsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryStatsResponse& from);
  void MergeFrom(const QueryStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStatsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.QueryStatsResponse";
  }
  protected:
  explicit QueryStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatFieldNumber = 1,
  };
  // repeated .v2ray.core.app.stats.command.Stat stat = 1;
  int stat_size() const;
  private:
  int _internal_stat_size() const;
  public:
  void clear_stat();
  ::v2ray::core::app::stats::command::Stat* mutable_stat(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::v2ray::core::app::stats::command::Stat >*
      mutable_stat();
  private:
  const ::v2ray::core::app::stats::command::Stat& _internal_stat(int index) const;
  ::v2ray::core::app::stats::command::Stat* _internal_add_stat();
  public:
  const ::v2ray::core::app::stats::command::Stat& stat(int index) const;
  ::v2ray::core::app::stats::command::Stat* add_stat();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::v2ray::core::app::stats::command::Stat >&
      stat() const;

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.QueryStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::v2ray::core::app::stats::command::Stat > stat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class SysStatsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.SysStatsRequest) */ {
 public:
  inline SysStatsRequest() : SysStatsRequest(nullptr) {}
  virtual ~SysStatsRequest();
  explicit constexpr SysStatsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SysStatsRequest(const SysStatsRequest& from);
  SysStatsRequest(SysStatsRequest&& from) noexcept
    : SysStatsRequest() {
    *this = ::std::move(from);
  }

  inline SysStatsRequest& operator=(const SysStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatsRequest& operator=(SysStatsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SysStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatsRequest* internal_default_instance() {
    return reinterpret_cast<const SysStatsRequest*>(
               &_SysStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SysStatsRequest& a, SysStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SysStatsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SysStatsRequest* New() const final {
    return CreateMaybeMessage<SysStatsRequest>(nullptr);
  }

  SysStatsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SysStatsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SysStatsRequest& from);
  void MergeFrom(const SysStatsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SysStatsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.SysStatsRequest";
  }
  protected:
  explicit SysStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.SysStatsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class SysStatsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.SysStatsResponse) */ {
 public:
  inline SysStatsResponse() : SysStatsResponse(nullptr) {}
  virtual ~SysStatsResponse();
  explicit constexpr SysStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SysStatsResponse(const SysStatsResponse& from);
  SysStatsResponse(SysStatsResponse&& from) noexcept
    : SysStatsResponse() {
    *this = ::std::move(from);
  }

  inline SysStatsResponse& operator=(const SysStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatsResponse& operator=(SysStatsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SysStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatsResponse* internal_default_instance() {
    return reinterpret_cast<const SysStatsResponse*>(
               &_SysStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SysStatsResponse& a, SysStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SysStatsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SysStatsResponse* New() const final {
    return CreateMaybeMessage<SysStatsResponse>(nullptr);
  }

  SysStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SysStatsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SysStatsResponse& from);
  void MergeFrom(const SysStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SysStatsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.SysStatsResponse";
  }
  protected:
  explicit SysStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumGoroutineFieldNumber = 1,
    kNumGCFieldNumber = 2,
    kAllocFieldNumber = 3,
    kTotalAllocFieldNumber = 4,
    kSysFieldNumber = 5,
    kMallocsFieldNumber = 6,
    kFreesFieldNumber = 7,
    kLiveObjectsFieldNumber = 8,
    kPauseTotalNsFieldNumber = 9,
    kUptimeFieldNumber = 10,
  };
  // uint32 NumGoroutine = 1;
  void clear_numgoroutine();
  ::PROTOBUF_NAMESPACE_ID::uint32 numgoroutine() const;
  void set_numgoroutine(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_numgoroutine() const;
  void _internal_set_numgoroutine(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 NumGC = 2;
  void clear_numgc();
  ::PROTOBUF_NAMESPACE_ID::uint32 numgc() const;
  void set_numgc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_numgc() const;
  void _internal_set_numgc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 Alloc = 3;
  void clear_alloc();
  ::PROTOBUF_NAMESPACE_ID::uint64 alloc() const;
  void set_alloc(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_alloc() const;
  void _internal_set_alloc(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 TotalAlloc = 4;
  void clear_totalalloc();
  ::PROTOBUF_NAMESPACE_ID::uint64 totalalloc() const;
  void set_totalalloc(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_totalalloc() const;
  void _internal_set_totalalloc(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Sys = 5;
  void clear_sys();
  ::PROTOBUF_NAMESPACE_ID::uint64 sys() const;
  void set_sys(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sys() const;
  void _internal_set_sys(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Mallocs = 6;
  void clear_mallocs();
  ::PROTOBUF_NAMESPACE_ID::uint64 mallocs() const;
  void set_mallocs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mallocs() const;
  void _internal_set_mallocs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 Frees = 7;
  void clear_frees();
  ::PROTOBUF_NAMESPACE_ID::uint64 frees() const;
  void set_frees(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_frees() const;
  void _internal_set_frees(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 LiveObjects = 8;
  void clear_liveobjects();
  ::PROTOBUF_NAMESPACE_ID::uint64 liveobjects() const;
  void set_liveobjects(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_liveobjects() const;
  void _internal_set_liveobjects(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 PauseTotalNs = 9;
  void clear_pausetotalns();
  ::PROTOBUF_NAMESPACE_ID::uint64 pausetotalns() const;
  void set_pausetotalns(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pausetotalns() const;
  void _internal_set_pausetotalns(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 Uptime = 10;
  void clear_uptime();
  ::PROTOBUF_NAMESPACE_ID::uint32 uptime() const;
  void set_uptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uptime() const;
  void _internal_set_uptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.SysStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 numgoroutine_;
  ::PROTOBUF_NAMESPACE_ID::uint32 numgc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 alloc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 totalalloc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sys_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mallocs_;
  ::PROTOBUF_NAMESPACE_ID::uint64 frees_;
  ::PROTOBUF_NAMESPACE_ID::uint64 liveobjects_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pausetotalns_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uptime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// -------------------------------------------------------------------

class Config PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:v2ray.core.app.stats.command.Config) */ {
 public:
  inline Config() : Config(nullptr) {}
  virtual ~Config();
  explicit constexpr Config(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Config(const Config& from);
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline Config& operator=(Config&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Config& default_instance() {
    return *internal_default_instance();
  }
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }
  inline void Swap(Config* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Config* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Config* New() const final {
    return CreateMaybeMessage<Config>(nullptr);
  }

  Config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "v2ray.core.app.stats.command.Config";
  }
  protected:
  explicit Config(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:v2ray.core.app.stats.command.Config)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetStatsRequest

// string name = 1;
inline void GetStatsRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetStatsRequest::name() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.GetStatsRequest.name)
  return _internal_name();
}
inline void GetStatsRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.GetStatsRequest.name)
}
inline std::string* GetStatsRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:v2ray.core.app.stats.command.GetStatsRequest.name)
  return _internal_mutable_name();
}
inline const std::string& GetStatsRequest::_internal_name() const {
  return name_.Get();
}
inline void GetStatsRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetStatsRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:v2ray.core.app.stats.command.GetStatsRequest.name)
}
inline void GetStatsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:v2ray.core.app.stats.command.GetStatsRequest.name)
}
inline void GetStatsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:v2ray.core.app.stats.command.GetStatsRequest.name)
}
inline std::string* GetStatsRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetStatsRequest::release_name() {
  // @@protoc_insertion_point(field_release:v2ray.core.app.stats.command.GetStatsRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetStatsRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:v2ray.core.app.stats.command.GetStatsRequest.name)
}

// bool reset = 2;
inline void GetStatsRequest::clear_reset() {
  reset_ = false;
}
inline bool GetStatsRequest::_internal_reset() const {
  return reset_;
}
inline bool GetStatsRequest::reset() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.GetStatsRequest.reset)
  return _internal_reset();
}
inline void GetStatsRequest::_internal_set_reset(bool value) {
  
  reset_ = value;
}
inline void GetStatsRequest::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.GetStatsRequest.reset)
}

// -------------------------------------------------------------------

// Stat

// string name = 1;
inline void Stat::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Stat::name() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.Stat.name)
  return _internal_name();
}
inline void Stat::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.Stat.name)
}
inline std::string* Stat::mutable_name() {
  // @@protoc_insertion_point(field_mutable:v2ray.core.app.stats.command.Stat.name)
  return _internal_mutable_name();
}
inline const std::string& Stat::_internal_name() const {
  return name_.Get();
}
inline void Stat::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Stat::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:v2ray.core.app.stats.command.Stat.name)
}
inline void Stat::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:v2ray.core.app.stats.command.Stat.name)
}
inline void Stat::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:v2ray.core.app.stats.command.Stat.name)
}
inline std::string* Stat::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Stat::release_name() {
  // @@protoc_insertion_point(field_release:v2ray.core.app.stats.command.Stat.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Stat::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:v2ray.core.app.stats.command.Stat.name)
}

// int64 value = 2;
inline void Stat::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Stat::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Stat::value() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.Stat.value)
  return _internal_value();
}
inline void Stat::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  value_ = value;
}
inline void Stat::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.Stat.value)
}

// -------------------------------------------------------------------

// GetStatsResponse

// .v2ray.core.app.stats.command.Stat stat = 1;
inline bool GetStatsResponse::_internal_has_stat() const {
  return this != internal_default_instance() && stat_ != nullptr;
}
inline bool GetStatsResponse::has_stat() const {
  return _internal_has_stat();
}
inline void GetStatsResponse::clear_stat() {
  if (GetArena() == nullptr && stat_ != nullptr) {
    delete stat_;
  }
  stat_ = nullptr;
}
inline const ::v2ray::core::app::stats::command::Stat& GetStatsResponse::_internal_stat() const {
  const ::v2ray::core::app::stats::command::Stat* p = stat_;
  return p != nullptr ? *p : reinterpret_cast<const ::v2ray::core::app::stats::command::Stat&>(
      ::v2ray::core::app::stats::command::_Stat_default_instance_);
}
inline const ::v2ray::core::app::stats::command::Stat& GetStatsResponse::stat() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.GetStatsResponse.stat)
  return _internal_stat();
}
inline void GetStatsResponse::unsafe_arena_set_allocated_stat(
    ::v2ray::core::app::stats::command::Stat* stat) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stat_);
  }
  stat_ = stat;
  if (stat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:v2ray.core.app.stats.command.GetStatsResponse.stat)
}
inline ::v2ray::core::app::stats::command::Stat* GetStatsResponse::release_stat() {
  
  ::v2ray::core::app::stats::command::Stat* temp = stat_;
  stat_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::v2ray::core::app::stats::command::Stat* GetStatsResponse::unsafe_arena_release_stat() {
  // @@protoc_insertion_point(field_release:v2ray.core.app.stats.command.GetStatsResponse.stat)
  
  ::v2ray::core::app::stats::command::Stat* temp = stat_;
  stat_ = nullptr;
  return temp;
}
inline ::v2ray::core::app::stats::command::Stat* GetStatsResponse::_internal_mutable_stat() {
  
  if (stat_ == nullptr) {
    auto* p = CreateMaybeMessage<::v2ray::core::app::stats::command::Stat>(GetArena());
    stat_ = p;
  }
  return stat_;
}
inline ::v2ray::core::app::stats::command::Stat* GetStatsResponse::mutable_stat() {
  // @@protoc_insertion_point(field_mutable:v2ray.core.app.stats.command.GetStatsResponse.stat)
  return _internal_mutable_stat();
}
inline void GetStatsResponse::set_allocated_stat(::v2ray::core::app::stats::command::Stat* stat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stat_;
  }
  if (stat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stat);
    if (message_arena != submessage_arena) {
      stat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stat, submessage_arena);
    }
    
  } else {
    
  }
  stat_ = stat;
  // @@protoc_insertion_point(field_set_allocated:v2ray.core.app.stats.command.GetStatsResponse.stat)
}

// -------------------------------------------------------------------

// QueryStatsRequest

// string pattern = 1;
inline void QueryStatsRequest::clear_pattern() {
  pattern_.ClearToEmpty();
}
inline const std::string& QueryStatsRequest::pattern() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
  return _internal_pattern();
}
inline void QueryStatsRequest::set_pattern(const std::string& value) {
  _internal_set_pattern(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
}
inline std::string* QueryStatsRequest::mutable_pattern() {
  // @@protoc_insertion_point(field_mutable:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
  return _internal_mutable_pattern();
}
inline const std::string& QueryStatsRequest::_internal_pattern() const {
  return pattern_.Get();
}
inline void QueryStatsRequest::_internal_set_pattern(const std::string& value) {
  
  pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void QueryStatsRequest::set_pattern(std::string&& value) {
  
  pattern_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
}
inline void QueryStatsRequest::set_pattern(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
}
inline void QueryStatsRequest::set_pattern(const char* value,
    size_t size) {
  
  pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
}
inline std::string* QueryStatsRequest::_internal_mutable_pattern() {
  
  return pattern_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* QueryStatsRequest::release_pattern() {
  // @@protoc_insertion_point(field_release:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
  return pattern_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void QueryStatsRequest::set_allocated_pattern(std::string* pattern) {
  if (pattern != nullptr) {
    
  } else {
    
  }
  pattern_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pattern,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:v2ray.core.app.stats.command.QueryStatsRequest.pattern)
}

// bool reset = 2;
inline void QueryStatsRequest::clear_reset() {
  reset_ = false;
}
inline bool QueryStatsRequest::_internal_reset() const {
  return reset_;
}
inline bool QueryStatsRequest::reset() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.QueryStatsRequest.reset)
  return _internal_reset();
}
inline void QueryStatsRequest::_internal_set_reset(bool value) {
  
  reset_ = value;
}
inline void QueryStatsRequest::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.QueryStatsRequest.reset)
}

// -------------------------------------------------------------------

// QueryStatsResponse

// repeated .v2ray.core.app.stats.command.Stat stat = 1;
inline int QueryStatsResponse::_internal_stat_size() const {
  return stat_.size();
}
inline int QueryStatsResponse::stat_size() const {
  return _internal_stat_size();
}
inline void QueryStatsResponse::clear_stat() {
  stat_.Clear();
}
inline ::v2ray::core::app::stats::command::Stat* QueryStatsResponse::mutable_stat(int index) {
  // @@protoc_insertion_point(field_mutable:v2ray.core.app.stats.command.QueryStatsResponse.stat)
  return stat_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::v2ray::core::app::stats::command::Stat >*
QueryStatsResponse::mutable_stat() {
  // @@protoc_insertion_point(field_mutable_list:v2ray.core.app.stats.command.QueryStatsResponse.stat)
  return &stat_;
}
inline const ::v2ray::core::app::stats::command::Stat& QueryStatsResponse::_internal_stat(int index) const {
  return stat_.Get(index);
}
inline const ::v2ray::core::app::stats::command::Stat& QueryStatsResponse::stat(int index) const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.QueryStatsResponse.stat)
  return _internal_stat(index);
}
inline ::v2ray::core::app::stats::command::Stat* QueryStatsResponse::_internal_add_stat() {
  return stat_.Add();
}
inline ::v2ray::core::app::stats::command::Stat* QueryStatsResponse::add_stat() {
  // @@protoc_insertion_point(field_add:v2ray.core.app.stats.command.QueryStatsResponse.stat)
  return _internal_add_stat();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::v2ray::core::app::stats::command::Stat >&
QueryStatsResponse::stat() const {
  // @@protoc_insertion_point(field_list:v2ray.core.app.stats.command.QueryStatsResponse.stat)
  return stat_;
}

// -------------------------------------------------------------------

// SysStatsRequest

// -------------------------------------------------------------------

// SysStatsResponse

// uint32 NumGoroutine = 1;
inline void SysStatsResponse::clear_numgoroutine() {
  numgoroutine_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::_internal_numgoroutine() const {
  return numgoroutine_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::numgoroutine() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.NumGoroutine)
  return _internal_numgoroutine();
}
inline void SysStatsResponse::_internal_set_numgoroutine(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  numgoroutine_ = value;
}
inline void SysStatsResponse::set_numgoroutine(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_numgoroutine(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.NumGoroutine)
}

// uint32 NumGC = 2;
inline void SysStatsResponse::clear_numgc() {
  numgc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::_internal_numgc() const {
  return numgc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::numgc() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.NumGC)
  return _internal_numgc();
}
inline void SysStatsResponse::_internal_set_numgc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  numgc_ = value;
}
inline void SysStatsResponse::set_numgc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_numgc(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.NumGC)
}

// uint64 Alloc = 3;
inline void SysStatsResponse::clear_alloc() {
  alloc_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_alloc() const {
  return alloc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::alloc() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.Alloc)
  return _internal_alloc();
}
inline void SysStatsResponse::_internal_set_alloc(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  alloc_ = value;
}
inline void SysStatsResponse::set_alloc(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_alloc(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.Alloc)
}

// uint64 TotalAlloc = 4;
inline void SysStatsResponse::clear_totalalloc() {
  totalalloc_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_totalalloc() const {
  return totalalloc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::totalalloc() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.TotalAlloc)
  return _internal_totalalloc();
}
inline void SysStatsResponse::_internal_set_totalalloc(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  totalalloc_ = value;
}
inline void SysStatsResponse::set_totalalloc(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_totalalloc(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.TotalAlloc)
}

// uint64 Sys = 5;
inline void SysStatsResponse::clear_sys() {
  sys_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_sys() const {
  return sys_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::sys() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.Sys)
  return _internal_sys();
}
inline void SysStatsResponse::_internal_set_sys(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  sys_ = value;
}
inline void SysStatsResponse::set_sys(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sys(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.Sys)
}

// uint64 Mallocs = 6;
inline void SysStatsResponse::clear_mallocs() {
  mallocs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_mallocs() const {
  return mallocs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::mallocs() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.Mallocs)
  return _internal_mallocs();
}
inline void SysStatsResponse::_internal_set_mallocs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mallocs_ = value;
}
inline void SysStatsResponse::set_mallocs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mallocs(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.Mallocs)
}

// uint64 Frees = 7;
inline void SysStatsResponse::clear_frees() {
  frees_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_frees() const {
  return frees_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::frees() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.Frees)
  return _internal_frees();
}
inline void SysStatsResponse::_internal_set_frees(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  frees_ = value;
}
inline void SysStatsResponse::set_frees(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_frees(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.Frees)
}

// uint64 LiveObjects = 8;
inline void SysStatsResponse::clear_liveobjects() {
  liveobjects_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_liveobjects() const {
  return liveobjects_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::liveobjects() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.LiveObjects)
  return _internal_liveobjects();
}
inline void SysStatsResponse::_internal_set_liveobjects(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  liveobjects_ = value;
}
inline void SysStatsResponse::set_liveobjects(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_liveobjects(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.LiveObjects)
}

// uint64 PauseTotalNs = 9;
inline void SysStatsResponse::clear_pausetotalns() {
  pausetotalns_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::_internal_pausetotalns() const {
  return pausetotalns_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SysStatsResponse::pausetotalns() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.PauseTotalNs)
  return _internal_pausetotalns();
}
inline void SysStatsResponse::_internal_set_pausetotalns(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pausetotalns_ = value;
}
inline void SysStatsResponse::set_pausetotalns(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pausetotalns(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.PauseTotalNs)
}

// uint32 Uptime = 10;
inline void SysStatsResponse::clear_uptime() {
  uptime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::_internal_uptime() const {
  return uptime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SysStatsResponse::uptime() const {
  // @@protoc_insertion_point(field_get:v2ray.core.app.stats.command.SysStatsResponse.Uptime)
  return _internal_uptime();
}
inline void SysStatsResponse::_internal_set_uptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  uptime_ = value;
}
inline void SysStatsResponse::set_uptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uptime(value);
  // @@protoc_insertion_point(field_set:v2ray.core.app.stats.command.SysStatsResponse.Uptime)
}

// -------------------------------------------------------------------

// Config

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace core
}  // namespace v2ray

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto
